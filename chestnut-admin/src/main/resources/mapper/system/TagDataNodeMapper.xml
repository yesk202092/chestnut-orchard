<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chestnut.system.mapper.TagDataNodeMapper">

    <resultMap type="TagDataNode" id="TagDataNodeResult">
        <result property="id" column="id"/>
        <result property="sort" column="sort"/>
        <result property="nodeValue" column="node_value"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="parentId" column="parent_id"/>
        <result property="nodeName" column="node_name"/>
        <result property="nodeType" column="node_type"/>
    </resultMap>

    <sql id="selectTagDataNodeVo">
        select id, sort, node_value, create_by, create_time, update_by, update_time, parent_id, node_name,node_type from
        tag_data_node
    </sql>

    <select id="selectTagDataNodeList" parameterType="TagDataNode" resultMap="TagDataNodeResult">
        <include refid="selectTagDataNodeVo"/>
        <where>
            <if test="sort != null ">and sort = #{sort}</if>
            <if test="nodeValue != null  and nodeValue != ''">
                AND node_value like concat('%', #{nodeValue}, '%')</if>
            <if test="parentId != null ">and parent_id = #{parentId}</if>
            <if test="nodeName != null  and nodeName != ''">
                AND node_name like concat('%', #{nodeName}, '%')</if>
        </where>
    </select>

    <select id="selectTagDataNodeById" parameterType="Long" resultMap="TagDataNodeResult">
        <include refid="selectTagDataNodeVo"/>
        where id = #{id}
    </select>

    <insert id="insertTagDataNode" parameterType="TagDataNode" useGeneratedKeys="true" keyProperty="id">
        insert into tag_data_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sort != null">sort,</if>
            <if test="nodeValue != null">node_value,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="nodeName != null">node_name,</if>
            <if test="nodeType != null">node_type,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sort != null">#{sort},</if>
            <if test="nodeValue != null">#{nodeValue},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="nodeName != null">#{nodeName},</if>
            <if test="nodeType != null">#{nodeType},</if>
        </trim>
    </insert>

    <update id="updateTagDataNode" parameterType="TagDataNode">
        update tag_data_node
        <trim prefix="SET" suffixOverrides=",">
            <if test="sort != null">sort = #{sort},</if>
            <if test="nodeValue != null">node_value = #{nodeValue},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="nodeName != null">node_name = #{nodeName},</if>
            <if test="nodeType != null">node_type=#{nodeType},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTagDataNodeById" parameterType="Long">
        delete from tag_data_node where id = #{id}
    </delete>

    <delete id="deleteTagDataNodeByIds" parameterType="String">
        delete from tag_data_node where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>